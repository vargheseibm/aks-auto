name: 'Terraform'

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest  
    

    # Export variables from Github to use in the Terraform file
    env:
  
      
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}} 
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}} 
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUB_ID}} 
  


    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

   
    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ~1.4.6

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init 

    - name: Terraform Validate
      run: terraform validate

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan  -out=tfplan

    - name: Terraform Apply
      if: github.ref_name == 'main' && github.event_name == 'push'
      run: terraform apply -auto-approve tfplan